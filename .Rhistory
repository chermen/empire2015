install.packages(c("bartMachine", "rjson", "tesseract"))
install.packages("tesseract")
install.packages("tesseract")
install.packages("abbyyR")
library("abbyyR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:abbyyR", unload=TRUE)
remove.packages("abbyyR")
install.packages("abbyyR")
install.packages(c("psych", "rgdal", "RSQLite"))
install.packages("emmeans")
install.packages(c("Amelia", "data.table"))
install.packages("data.table")
install.packages(c("data.table", "deSolve", "ggrepel"))
install.packages("httpuv")
install.packages(c("glmmTMB", "modelr", "RcppProgress", "stringr"))
install.packages(c("gamlr", "ggsci"))
install.packages("brms")
install.packages("rngtools")
install.packages("bit")
install.packages("nleqslv")
install.packages(c("GGally", "inline", "lambda.r", "pdftools", "randomForestSRC", "repr", "shiny", "tidyr"))
install.packages(c("dplyr", "pbmcapply"))
install.packages("useful")
install.packages("emmeans")
install.packages("prediction")
install.packages(c("ggformula", "mosaic", "mosaicCore", "RSpectra"))
install.packages("rrcov")
install.packages(c("locpol", "readstata13", "utf8"))
install.packages(c("caret", "CVST", "data.table", "ggforce", "htmlTable", "openxlsx", "pdftools", "plotrix", "readstata13"))
install.packages("data.table")
install.packages(c("bit", "purrr", "purrrlyr", "quantreg", "rJava"))
install.packages("rJava")
install.packages("rJava")
install.packages(c("abbyyR", "rJava", "rlang", "stargazer"))
install.packages("Rfacebook")
install.packages(c("brms", "extraDistr", "gamlss.dist", "merTools", "partykit", "quanteda", "RcppRoll", "sjlabelled", "sjstats", "sp", "statnet.common", "stringdist"))
install.packages(c("ggeffects", "reticulate", "rgdal", "rgeos", "RgoogleMaps", "rjson", "stringdist"))
install.packages(c("later", "stringdist"))
install.packages("stringdist")
install.packages(c("highr", "stringdist", "useful"))
install.packages("stringdist")
install.packages(c("stringdist", "units"))
install.packages("udunits2")
install.packages("units")
install.packages("units")
install.packages(c("manipulateWidget", "rmarkdown", "units", "xlsx"))
install.packages(c("cubature", "munsell", "officer", "xlsx", "zoo"))
install.packages(c("globals", "stringi", "xlsx"))
install.packages(c("cubature", "progress"))
install.packages(c("polspline", "prophet"))
install.packages("recipes")
install.packages(c("effects", "httpuv", "iplots", "mgcv", "tm"))
install.packages(c("imputeTS", "mice", "sjmisc"))
install.packages("forecast")
install.packages(c("mcmcplots", "statnet.common"))
install.packages(c("ggpubr", "rgdal", "robustbase"))
install.packages(c("ddalpha", "mosaicData", "TMB"))
install.packages(c("mosaicCore", "TMB"))
install.packages(c("globals", "gmodels"))
install.packages(c("emmeans", "gtools"))
install.packages(c("ggformula", "haven", "mclust"))
install.packages(c("devtools", "dotwhisker", "dygraphs", "gistr"))
install.packages(c("googlesheets", "pan"))
install.packages(c("broom", "ggeffects", "glmmTMB", "httpuv", "lava"))
install.packages("survMisc")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("reticulate", "survival"))
install.packages(c("ggforce", "ggraph", "tinytex"))
install.packages("sjlabelled")
install.packages(c("rdrobust", "sjstats"))
install.packages(c("git2r", "mitml", "tesseract", "TH.data"))
install.packages("git2r")
install.packages(c("dygraphs", "git2r", "JGR", "penalized", "sjPlot"))
install.packages(c("git2r", "iterators", "JGR", "rdrobust", "survival"))
install.packages("JGR")
install.packages("rJava")
install.packages("JGR")
install.packages("JGR")
install.packages("JGR")
install.packages(c("gmp", "pillar"))
install.packages(c("cowplot", "modeltools", "quanteda", "RCurl", "XML", "zoo"))
install.packages(c("broom", "spacyr", "xts"))
install.packages(c("emmeans", "evaluate", "git2r", "glue", "janitor"))
install.packages("git2r")
install.packages(c("arsenal", "caTools", "foreign", "fpc", "gam", "ggstance", "httpuv", "RcppParallel", "robustbase", "trimcluster"))
install.packages(c("brms", "plotly", "stringi"))
install.packages(c("future", "matrixStats", "mice", "officer", "Rcpp"))
install.packages("sparsepp")
install.packages("yaml")
install.packages(c("e1071", "igraph", "janitor", "maptools", "mice", "openssl", "Rmpfr", "robustbase", "roxygen2", "stinepack", "tm", "yaml"))
install.packages("XML")
install.packages("jomo")
install.packages("bayesplot")
install.packages(c("ggformula", "rgdal"))
install.packages("rgdal")
install.packages("rgdal")
install.packages("reticulate")
install.packages(c("scales", "XML"))
install.packages(c("ggeffects", "kernlab", "ModelMetrics", "mosaic", "sjlabelled", "tesseract"))
install.packages("ModelMetrics")
install.packages(c("Brobdingnag", "fansi"))
install.packages("ipred")
install.packages("snakecase")
install.packages(c("pkgconfig", "processx"))
install.packages(c("RcppArmadillo", "rlang"))
install.packages("sandwich")
install.packages("tweet2r")
library("tweet2r", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:tweet2r", unload=TRUE)
install.packages(c("bridgesampling", "effects", "sjstats"))
install.packages("pls")
install.packages(c("car", "digest", "rstantools", "tinytex"))
install.packages("sjPlot")
install.packages("car")
install.packages(c("plotrix", "R.utils"))
install.packages(c("aods3", "doBy", "ggpubr", "xtable"))
install.packages("chron")
install.packages("textmineR")
install.packages(c("digest", "ggcorrplot", "jagsUI", "sjlabelled", "xts"))
install.packages(c("ncvreg", "sjmisc"))
install.packages(c("BMA", "MCMCpack", "snow"))
install.packages(c("brms", "globals", "magic"))
install.packages("ndjson")
install.packages(c("arsenal", "later", "maptools", "pkgbuild", "zoo"))
install.packages(c("data.table", "TTR"))
install.packages("data.table")
install.packages("data.table")
install.packages(c("covr", "data.table", "emmeans", "expm", "robustbase", "sparsepp", "units"))
export LDFLAGS="-L/usr/local/opt/llvm/lib"
install.packages(c("data.table", "units"))
install.packages(c("data.table", "units"))
install.packages(c("data.table", "units"))
install.packages(c("data.table", "units"))
install.packages(c("cli", "data.table", "doParallel", "units"))
install.packages(c("data.table", "units"))
install.packages(c("data.table", "rdrobust", "units"))
install.packages(c("betareg", "ggridges", "tweenr"))
install.packages("webshot")
install.packages(c("carData", "commonmark", "data.table", "htmlwidgets", "nloptr", "Rcpp", "rstan", "spatstat.utils"))
install.packages(c("data.table", "nloptr"))
install.packages(c("data.table", "memisc", "nloptr"))
install.packages(c("clusterSim", "spatstat.data"))
install.packages(c("fansi", "R6"))
install.packages("mime")
install.packages("gamlss.dist")
install.packages(c("coda", "StanHeaders", "useful"))
install.packages("rjags")
install.packages("evaluate")
install.packages("digest")
install.packages(c("ca", "ggeffects", "tidyselect"))
install.packages(c("globals", "pkgload", "survey"))
install.packages("testthat")
install.packages("rstan")
install.packages(c("covr", "dendextend", "devtools", "NLP", "rgeos", "survHE"))
install.packages(c("remotes", "rjags"))
vars4<-c("V1","V2","V196","V200","V202","V236","V223","V225",
"V153","V9","V184","V142","V147","V185","V186","V122","V123)
vars4<-c("V1","V2","V196","V200","V202","V236","V223","V225",
install.packages(c("cubature", "mgcv"))
install.packages(c("spatstat.utils", "tidyr"))
install.packages(c("pkgload", "survival"))
install.packages(c("modeest", "remotes"))
install.packages(c("psych", "spatstat.utils", "textmineR"))
install.packages(c("MASS", "Matrix", "quanteda", "shiny", "tesseract"))
install.packages(c("Rcpp", "RgoogleMaps", "rstan"))
install.packages(c("dimRed", "lintr", "rgeos"))
install.packages(c("arsenal", "dimRed", "jomo", "survHE", "TMB"))
library(Zelig)
help.zelig("models")
install.packages(c("rcmdcheck", "RcppArmadillo", "TMB"))
install.packages("ggpubr")
citation("stargazer")
citation("aods3")
install.packages(c("RJSONIO", "rsconnect"))
install.packages("mclust")
install.packages(c("quanteda", "recipes"))
install.packages("tseries")
install.packages(c("cubature", "mgcv"))
citation("MASS")
citation(bayesplot)
citation("bayesplot")
install.packages("RcppEigen")
install.packages(c("lava", "rio"))
install.packages(c("cubature", "generics"))
install.packages(c("effects", "interactionTest"))
install.packages("commonmark")
install.packages("prediction")
install.packages(c("broom", "processx", "rsconnect", "units"))
install.packages("units")
install.packages(c("gamlss.dist", "rmarkdown", "streamR"))
install.packages("callr")
install.packages(c("cubature", "httr", "readr"))
install.packages("pdftools")
install.packages("RcppParallel")
install.packages(c("hunspell", "pillar"))
install.packages(c("brms", "cubature", "httpuv", "quantreg", "sjPlot", "survey"))
install.packages(c("bayesm", "callr", "prophet", "ps", "readr", "readxl", "slam", "tm", "topicmodels"))
install.packages("codetools")
install.packages("class")
install.packages(c("deldir", "tibble"))
install.packages("ropercenter")
install.packages("ddalpha")
install.packages(c("curl", "ggeffects", "sjlabelled"))
install.packages(c("spatstat", "tinytex"))
install.packages(c("clipr", "rsconnect"))
install.packages(c("colorspace", "data.table", "ggformula", "mosaic", "psych", "tibble"))
install.packages("data.table")
install.packages("data.table")
install.packages(c("checkmate", "SnowballC"))
install.packages("arsenal")
citation('data.table')
citation('xtable')
citation('bayesplot')
install.packages(c("openssl", "pdftools"))
install.packages(c("emmeans", "Rmpfr"))
install.packages("rgenoud")
install.packages(c("aod", "future", "gplots", "Hmisc", "muhaz", "purrr", "rms"))
install.packages(c("mirt", "StanHeaders", "survey"))
install.packages("quanteda")
install.packages("raster")
install.packages("partykit")
install.packages("prediction")
install.packages("rmutil")
install.packages(c("ggmap", "lme4", "vegan"))
install.packages(c("irlba", "stable"))
install.packages(c("jomo", "modelr", "pbapply", "repr"))
install.packages("stringr")
install.packages(c("igraph", "later"))
install.packages("lava")
install.packages("evaluate")
install.packages(c("igraph", "ISOcodes", "stringi"))
install.packages(c("dplyr", "purrrlyr", "R.utils", "R6", "readxl"))
install.packages(c("dplyr", "FNN", "ggmcmc"))
install.packages(c("dplyr", "FNN", "ggmcmc"))
install.packages("forcats")
install.packages(c("geometry", "maptools", "VGAM"))
install.packages(c("ellipsis", "flexmix", "haven", "libcoin", "modelr"))
install.packages(c("ggsignif", "glmertree", "xfun"))
install.packages(c("elasticsearchr", "rgdal"))
install.packages(c("clue", "dtplyr", "sys", "zip"))
install.packages(c("list", "ncvreg", "quanteda", "slam"))
install.packages(c("polspline", "reticulate"))
install.packages(c("libcoin", "mvtnorm"))
install.packages("gstat")
install.packages(c("officer", "openssl"))
install.packages(c("gmp", "tidyr"))
install.packages(c("emmeans", "purrr"))
install.packages(c("RCurl", "tau", "WDI", "XML"))
install.packages(c("multcomp", "mvtnorm", "proxy", "registry", "rmutil"))
install.packages(c("formatR", "lme4", "network", "reticulate"))
install.packages(c("caTools", "Matching", "mice", "XML"))
install.packages(c("coin", "ggforce", "gower"))
install.packages(c("gower", "Matrix", "rgl"))
install.packages(c("future", "gower", "knitr", "RcppArmadillo"))
install.packages("ordinal")
install.packages(c("ggforce", "gmp", "pdftools", "permute", "processx", "rgdal", "rgl", "sjlabelled", "sys", "zip"))
install.packages(c("eiPack", "glue", "sjmisc", "stringi", "tinytex"))
install.packages(c("loo", "modeest", "polyclip", "readxl", "rmarkdown"))
install.packages(c("bazar", "dendextend", "httpuv", "lazyeval", "Lmoments", "purrr", "purrrlyr", "sjstats"))
install.packages(c("Lmoments", "Rcpp", "sjmisc", "tibble"))
install.packages(c("colorspace", "ggeffects", "git2r", "Lmoments", "memisc"))
install.packages(c("flexsurv", "Lmoments"))
install.packages(c("cli", "e1071", "Lmoments", "msm", "robustbase"))
install.packages("Lmoments")
install.packages(c("fs", "git2r", "Lmoments", "rstudioapi"))
install.packages("gamlss.dist")
install.packages(c("assertthat", "expm", "highr", "mgcv", "pkgbuild", "recipes", "rlang", "zoo"))
install.packages(c("mgcv", "openssl", "polynom", "RcppArmadillo", "rtiff", "spatstat", "textmineR"))
install.packages(c("Matrix", "mgcv"))
install.packages("mgcv")
install.packages(c("mgcv", "pls", "quantmod", "uroot"))
install.packages("mgcv")
install.packages(c("arsenal", "caret", "gtable", "lfe", "mgcv"))
install.packages(c("lfe", "mgcv"))
install.packages(c("geometry", "insight", "lfe", "mgcv", "rJava", "rlang", "survival"))
install.packages(c("lfe", "mgcv", "rJava", "survival"))
install.packages(c("lfe", "mgcv", "network", "pbmcapply", "quanteda", "rJava", "xfun"))
install.packages(c("lfe", "mgcv", "rJava"))
install.packages(c("lfe", "mgcv", "rJava", "RSpectra"))
install.packages("cluster")
install.packages("httpuv")
install.packages("sandwich")
install.packages(c("data.table", "ggplot2", "nlme", "plotrix", "rlang", "shiny", "usethis"))
install.packages("data.table")
install.packages(c("broom", "data.table", "ddalpha"))
install.packages("data.table")
install.packages(c("data.table", "devtools"))
install.packages(c("nlme", "remotes"))
install.packages(c("backports", "plotly", "remotes", "rversions", "rvest"))
install.packages(c("reticulate", "rpart", "shiny", "tinytex"))
install.packages(c("clipr", "forecast", "JavaGD", "lpdensity"))
install.packages("JavaGD")
install.packages("JavaGD")
install.packages("JavaGD")
install.packages("JavaGD")
install.packages(c("JavaGD", "textmineR"))
install.packages(c("caret", "JavaGD"))
install.packages("JavaGD")
library(JavaGD)
detach("package:JavaGD", unload = TRUE)
library(JGR)
detach("package:JGR", unload = TRUE)
library(rJava)
detach("package:rJava", unload = TRUE)
library(RJSONIO)
detach("package:RJSONIO", unload = TRUE)
library(rJava)
library(JavaGD)
detach("package:JavaGD", unload = TRUE)
remove.packages("rJava")
install.packages("rJava")
library(rJava)
library(rJava)
detach("package:rJava", unload = TRUE)
library(JavaGD)
library(JGR)
detach("package:JavaGD", unload = TRUE)
detach("package:JGR", unload = TRUE)
detach("package:rJava", unload = TRUE)
setwd("/Users/chermen/empire2015")
library(foreign)
library(bayesm)
library(mcmcplots)
library(memisc)
library(pscl)
library(lattice)
library(effects)
library(visreg)
library(MASS)
library(rsm)
library(reshape2)
library(ggplot2)
colsum<-read.dta("colsum5.dta")
nvar=8            # Number of X variables
colsum$interaction<-colsum$g1_02*colsum$FOREST
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
nobs <- 200
nvar=8            # Number of X variables
alpha = 1
Vbeta = diag(nvar)*0.01
colsum$interaction<-colsum$g1_02*colsum$FOREST
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
nobs <- 200       # Number of observations
nvar=8            # Number of X variables
colsum$interaction<-colsum$g1_02*colsum$FOREST # Interaction term
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
View(X)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
colsum$interaction<-colsum$g1_02*colsum$FOREST # Interaction term
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
X = cbind(rep(1,nobs),colsum$meanpop)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$Population,colsum$Urban,colsum$Elevation,colsum$Oil,   colsum$Forest,colsum$Ethnicity,colsum$Interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
Vbeta = diag(nvar)*0.01
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
nobs <- 200       # Number of observations
nvar=8            # Number of X variables
Vbeta = diag(nvar)*0.01
colsum$interaction<-colsum$g1_02*colsum$FOREST # Interaction term
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
simnegbindata = list(y=colsum$GOV_FIRE, X=X)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1,prior=beta)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1,Prior=beta)
if(nchar(Sys.getenv("LONG_TEST")) != 0)  {R=1000} else {R=10}
set.seed(66)
simnegbin = function(X, beta, alpha) {
# Simulate from the Negative Binomial Regression
lambda = exp(X%*%beta)
y = NULL
for (j in 1:length(lambda)) { y = c(y, rnbinom(1, mu=lambda[j], size=alpha)) }
return(y)
}
nobs = 500
nvar = 2 # Number of X variables
alpha = 5
Vbeta = diag(nvar)*0.01
simnegbindata = NULL
beta = c(0.6, 0.2)
X = cbind(rep(1,nobs), rnorm(nobs,mean=2,sd=0.5))
simnegbindata = list(y=simnegbin(X,beta,alpha), X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=R)
out = rnegbinRw(Data=Data1, Mcmc=list(R=R))
nobs <- 200       # Number of observations
nvar=8            # Number of X variables
Vbeta = diag(nvar)*0.01
colsum$interaction<-colsum$g1_02*colsum$FOREST # Interaction term
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$meanpop,colsum$urban,colsum$elev,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
summary(colsum$meanpop)
colsum$Population<-colsum$meanpop/10000
colsum$Elevation<-colsum$elev/1000
nobs <- 200       # Number of observations
nvar=8            # Number of X variables
Vbeta = diag(nvar)*0.01
colsum$interaction<-colsum$g1_02*colsum$FOREST # Interaction term
# Construct the regdata (containing X)
simnegbindata = NULL
#beta = c(coefficients(nb6.4))
beta<-c(0,0,0,0,0,0,0,0)
X = cbind(rep(1,nobs),colsum$Population,colsum$urban,colsum$Elevation,colsum$OIL,
colsum$FOREST,colsum$g1_02,colsum$interaction)
simnegbindata = list(y=colsum$GOV_FIRE, X=X, beta=beta)
Data1 = simnegbindata
Mcmc1 = list(R=100000)
out = rnegbinRw(Data=Data1,Mcmc=Mcmc1)
betas<-as.matrix(out$betadraw)
plot(out$betadraw)
colnames(betas)[1:8] <- c("Intercept","Population(log)","Urban","Elevation","Oil",
"Forest","Ethnicity","Forest:Ethnicity")
denplot(betas, parms=c("Forest","Ethnicity", "Forest:Ethnicity"))
caterplot(betas, parms=c("Population(log)","Urban","Elevation","Oil","Forest","Ethnicity", "Forest:Ethnicity"), horizontal=T,labels.loc="above", denstrip=T)
head(betas)
betasdat<-as.data.frame(betas)
forest<-betasdat[c(6)]
forgg<-melt(forest)
head(forgg)
m <- ggplot(forgg, aes(x = value))
m + geom_density(adjust=5)+
xlab("Posterior Estimates") +
ylab("Density") +
ggtitle("Forest")
ethnic<-betasdat[c(7)]
ethgg<-melt(ethnic)
head(ethgg)
m <- ggplot(ethgg, aes(x = value))
m + geom_density(adjust=5)+
xlab("Posterior Estimates") +
ylab("Density") +
ggtitle("Ethnicity")
inter<-betasdat[c(8)]
intgg<-melt(inter)
head(intgg)
m <- ggplot(intgg, aes(x = value))
m + geom_density(adjust=5)+
xlab("Posterior Estimates") +
ylab("Density") +
ggtitle("Interaction of Forest and Ethnicity")
beta.sims <- t(out$betadraw) # transpose of b2$beta
apply(beta.sims, 1, quantile, probs = c(0.025, 0.975))
apply(beta.sims, 1, mean)
